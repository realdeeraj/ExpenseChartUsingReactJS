{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\reald\\\\Desktop\\\\udemy-react\\\\01-starting-setup\\\\src\\\\components\\\\Expenses\\\\ExpenseChart.js\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ExpenseChart = props => {\n  const expValues = [{\n    label: \"Jan\",\n    value: 0\n  }, {\n    label: \"Feb\",\n    value: 0\n  }, {\n    label: \"Mar\",\n    value: 0\n  }, {\n    label: \"Apr\",\n    value: 0\n  }, {\n    label: \"May\",\n    value: 0\n  }, {\n    label: \"Jun\",\n    value: 0\n  }, {\n    label: \"Jul\",\n    value: 0\n  }, {\n    label: \"Aug\",\n    value: 0\n  }, {\n    label: \"Sep\",\n    value: 0\n  }, {\n    label: \"Oct\",\n    value: 0\n  }, {\n    label: \"Nov\",\n    value: 0\n  }, {\n    label: \"Dec\",\n    value: 0\n  }];\n  let maxValue = 0;\n\n  for (let exp of props.filteredexp) {\n    let getmonth = exp.date().getMonth();\n    expValues[getmonth].value += expValues[getmonth];\n  }\n\n  const valuesonly = expvalues.map(obj => obj.value);\n  maxValue = Math.max(...valuesonly);\n  return /*#__PURE__*/_jsxDEV(Chart, {\n    datapoints: expValues,\n    maxvalue: maxValue\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 10\n  }, this);\n};\n\n_c = ExpenseChart;\nexport default ExpenseChart;\n\nvar _c;\n\n$RefreshReg$(_c, \"ExpenseChart\");","map":{"version":3,"sources":["C:/Users/reald/Desktop/udemy-react/01-starting-setup/src/components/Expenses/ExpenseChart.js"],"names":["React","ExpenseChart","props","expValues","label","value","maxValue","exp","filteredexp","getmonth","date","getMonth","valuesonly","expvalues","map","obj","Math","max"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;AAEA,MAAMC,YAAY,GAAIC,KAAD,IAAW;AAC9B,QAAMC,SAAS,GAAG,CAChB;AAAEC,IAAAA,KAAK,EAAE,KAAT;AAAgBC,IAAAA,KAAK,EAAE;AAAvB,GADgB,EAEhB;AAAED,IAAAA,KAAK,EAAE,KAAT;AAAgBC,IAAAA,KAAK,EAAE;AAAvB,GAFgB,EAGhB;AAAED,IAAAA,KAAK,EAAE,KAAT;AAAgBC,IAAAA,KAAK,EAAE;AAAvB,GAHgB,EAIhB;AAAED,IAAAA,KAAK,EAAE,KAAT;AAAgBC,IAAAA,KAAK,EAAE;AAAvB,GAJgB,EAKhB;AAAED,IAAAA,KAAK,EAAE,KAAT;AAAgBC,IAAAA,KAAK,EAAE;AAAvB,GALgB,EAMhB;AAAED,IAAAA,KAAK,EAAE,KAAT;AAAgBC,IAAAA,KAAK,EAAE;AAAvB,GANgB,EAOhB;AAAED,IAAAA,KAAK,EAAE,KAAT;AAAgBC,IAAAA,KAAK,EAAE;AAAvB,GAPgB,EAQhB;AAAED,IAAAA,KAAK,EAAE,KAAT;AAAgBC,IAAAA,KAAK,EAAE;AAAvB,GARgB,EAShB;AAAED,IAAAA,KAAK,EAAE,KAAT;AAAgBC,IAAAA,KAAK,EAAE;AAAvB,GATgB,EAUhB;AAAED,IAAAA,KAAK,EAAE,KAAT;AAAgBC,IAAAA,KAAK,EAAE;AAAvB,GAVgB,EAWhB;AAAED,IAAAA,KAAK,EAAE,KAAT;AAAgBC,IAAAA,KAAK,EAAE;AAAvB,GAXgB,EAYhB;AAAED,IAAAA,KAAK,EAAE,KAAT;AAAgBC,IAAAA,KAAK,EAAE;AAAvB,GAZgB,CAAlB;AAcA,MAAIC,QAAQ,GAAG,CAAf;;AACA,OAAK,IAAIC,GAAT,IAAgBL,KAAK,CAACM,WAAtB,EAAmC;AACjC,QAAIC,QAAQ,GAAGF,GAAG,CAACG,IAAJ,GAAWC,QAAX,EAAf;AACAR,IAAAA,SAAS,CAACM,QAAD,CAAT,CAAoBJ,KAApB,IAA6BF,SAAS,CAACM,QAAD,CAAtC;AACD;;AACD,QAAMG,UAAU,GAAGC,SAAS,CAACC,GAAV,CAAeC,GAAD,IAASA,GAAG,CAACV,KAA3B,CAAnB;AACAC,EAAAA,QAAQ,GAAGU,IAAI,CAACC,GAAL,CAAS,GAAGL,UAAZ,CAAX;AAEA,sBAAO,QAAC,KAAD;AAAO,IAAA,UAAU,EAAET,SAAnB;AAA8B,IAAA,QAAQ,EAAEG;AAAxC;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CAxBD;;KAAML,Y;AA0BN,eAAeA,YAAf","sourcesContent":["import React from \"react\";\r\n\r\nconst ExpenseChart = (props) => {\r\n  const expValues = [\r\n    { label: \"Jan\", value: 0 },\r\n    { label: \"Feb\", value: 0 },\r\n    { label: \"Mar\", value: 0 },\r\n    { label: \"Apr\", value: 0 },\r\n    { label: \"May\", value: 0 },\r\n    { label: \"Jun\", value: 0 },\r\n    { label: \"Jul\", value: 0 },\r\n    { label: \"Aug\", value: 0 },\r\n    { label: \"Sep\", value: 0 },\r\n    { label: \"Oct\", value: 0 },\r\n    { label: \"Nov\", value: 0 },\r\n    { label: \"Dec\", value: 0 },\r\n  ];\r\n  let maxValue = 0;\r\n  for (let exp of props.filteredexp) {\r\n    let getmonth = exp.date().getMonth();\r\n    expValues[getmonth].value += expValues[getmonth];\r\n  }\r\n  const valuesonly = expvalues.map((obj) => obj.value);\r\n  maxValue = Math.max(...valuesonly);\r\n\r\n  return <Chart datapoints={expValues} maxvalue={maxValue}></Chart>;\r\n};\r\n\r\nexport default ExpenseChart;\r\n"]},"metadata":{},"sourceType":"module"}