{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\reald\\\\Desktop\\\\udemy-react\\\\01-starting-setup\\\\src\\\\components\\\\NewExpense\\\\NewExpense.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport ExpenseForm from './ExpenseForm';\nimport './NewExpense.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst NewExpense = props => {\n  _s();\n\n  const [showExpense, showExpenseHandler] = useState('False');\n\n  const getExpense = enteredExpense => {\n    const curData = { ...enteredExpense,\n      id: Math.random().toString()\n    };\n    props.onSaveExpenseData(curData);\n  };\n\n  const showExpenseForm = () => {\n    showExpenseHandler('True');\n  };\n\n  const notShowExpenseForm = () => {\n    showExpenseHandler('False');\n  };\n\n  let form;\n\n  if (showExpense === 'False') {\n    form = /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: showExpenseForm,\n      children: \"Add new Expense\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 17\n    }, this);\n  } else {\n    form = /*#__PURE__*/_jsxDEV(ExpenseForm, {\n      onSaveExpenseData: getExpense,\n      formChanger: notShowExpenseForm\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 17\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"new-expense\",\n    children: form\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this);\n};\n\n_s(NewExpense, \"iQnUHny+Fnr0l1S3nx3luvv30A0=\");\n\n_c = NewExpense;\nexport default NewExpense;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewExpense\");","map":{"version":3,"sources":["C:/Users/reald/Desktop/udemy-react/01-starting-setup/src/components/NewExpense/NewExpense.js"],"names":["React","useState","ExpenseForm","NewExpense","props","showExpense","showExpenseHandler","getExpense","enteredExpense","curData","id","Math","random","toString","onSaveExpenseData","showExpenseForm","notShowExpenseForm","form"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAA+B,OAA/B;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAO,kBAAP;;;AAEA,MAAMC,UAAU,GAAIC,KAAD,IAAS;AAAA;;AACxB,QAAM,CAACC,WAAD,EAAaC,kBAAb,IAAmCL,QAAQ,CAAC,OAAD,CAAjD;;AAEA,QAAMM,UAAU,GAAIC,cAAD,IAAkB;AACjC,UAAMC,OAAO,GAAG,EACZ,GAAGD,cADS;AAEZE,MAAAA,EAAE,EAAGC,IAAI,CAACC,MAAL,GAAcC,QAAd;AAFO,KAAhB;AAIAT,IAAAA,KAAK,CAACU,iBAAN,CAAwBL,OAAxB;AACH,GAND;;AAQA,QAAMM,eAAe,GAAG,MAAK;AACzBT,IAAAA,kBAAkB,CAAC,MAAD,CAAlB;AACH,GAFD;;AAGA,QAAMU,kBAAkB,GAAG,MAAM;AAC7BV,IAAAA,kBAAkB,CAAC,OAAD,CAAlB;AACH,GAFD;;AAGA,MAAIW,IAAJ;;AACA,MAAGZ,WAAW,KAAK,OAAnB,EAA2B;AACtBY,IAAAA,IAAI,gBAAG;AAAQ,MAAA,OAAO,EAAEF,eAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACJ,GAFD,MAEK;AACAE,IAAAA,IAAI,gBAAG,QAAC,WAAD;AAAa,MAAA,iBAAiB,EAAEV,UAAhC;AAA4C,MAAA,WAAW,EAAES;AAAzD;AAAA;AAAA;AAAA;AAAA,YAAP;AACJ;;AAED,sBACI;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA,cACKC;AADL;AAAA;AAAA;AAAA;AAAA,UADJ;AAMH,CA9BD;;GAAMd,U;;KAAAA,U;AAgCN,eAAeA,UAAf","sourcesContent":["import React , {useState} from 'react'; \r\nimport ExpenseForm from './ExpenseForm'; \r\nimport './NewExpense.css';\r\n\r\nconst NewExpense = (props)=>{   \r\n    const [showExpense,showExpenseHandler] = useState('False'); \r\n\r\n    const getExpense = (enteredExpense)=>{ \r\n        const curData = {\r\n            ...enteredExpense , \r\n            id : Math.random().toString()\r\n        };  \r\n        props.onSaveExpenseData(curData);\r\n    }  \r\n\r\n    const showExpenseForm = () =>{\r\n        showExpenseHandler('True');\r\n    }   \r\n    const notShowExpenseForm = () => {\r\n        showExpenseHandler('False');\r\n    }\r\n    let form;\r\n    if(showExpense === 'False'){\r\n         form = <button onClick={showExpenseForm}>Add new Expense</button>\r\n    }else{\r\n         form = <ExpenseForm onSaveExpenseData={getExpense} formChanger={notShowExpenseForm}></ExpenseForm>\r\n    }\r\n    \r\n    return ( \r\n        <div className=\"new-expense\"> \r\n            {form}    \r\n        </div>\r\n        \r\n    );\r\n} \r\n\r\nexport default NewExpense;"]},"metadata":{},"sourceType":"module"}